import streamlit as st

# 🍔 MBTI Food Personality Test 🍕
st.title("🍽️ 음식 MBTI 테스트")
st.write("아래 16가지 질문에 답하고, 당신의 음식 취향에 따른 MBTI를 확인해보세요! 😋")

# 질문과 옵션 정의
questions = [
    # E/I (4문항)
    {"q": "1️⃣ 중국집에서 🍝 짜장면 vs 🍜 짬뽕, 어떤 걸 고를까요?", "opts": {"🍝 짜장면": "I", "🍜 짬뽕": "E"}},
    {"q": "2️⃣ 패스트푸드에서 🍔 햄버거 vs 🍕 피자, 무엇이 더 끌리나요?", "opts": {"🍔 햄버거": "E", "🍕 피자": "I"}},
    {"q": "3️⃣ 카페에서 ☕ 아메리카노 vs 🥛 카페라떼, 뭐에 한 표?", "opts": {"☕ 아메리카노": "I", "🥛 카페라떼": "E"}},
    {"q": "4️⃣ 파티 음식, 여러 가지 안주 준비(🎉) vs 집에서 혼자 간단히(🏠)", "opts": {"🎉 여러 안주": "E", "🏠 혼자 간단히": "I"}},
    # S/N (4문항)
    {"q": "5️⃣ 새로운 음식 도전: 🌮 이국적인 음식 vs 🍲 익숙한 한식", "opts": {"🌮 이국적인 음식": "N", "🍲 익숙한 한식": "S"}},
    {"q": "6️⃣ 메뉴 결정: 재료·맛 위주(📋 구체적) vs 추천·느낌 위주(✨ 추상적)", "opts": {"📋 구체적": "S", "✨ 추상적": "N"}},
    {"q": "7️⃣ 요리 스타일: 레시피대로 철저히(📑) vs 감으로 대충(👍)", "opts": {"📑 철저히": "S", "👍 감으로": "N"}},
    {"q": "8️⃣ 외식 장소: 🚗 유명 맛집 방문 vs 🏡 근처 잘 아는 식당", "opts": {"🚗 유명 맛집": "N", "🏡 근처 식당": "S"}},
    # T/F (4문항)
    {"q": "9️⃣ 음식 선택 기준: 💰 가격·영양 vs 😊 맛·기분", "opts": {"💰 가격·영양": "T", "😊 맛·기분": "F"}},
    {"q": "🔟 요리 중 문제가 발생하면: 🧠 논리적 해결 vs 💖 감각적 조절", "opts": {"🧠 논리적": "T", "💖 감각적": "F"}},
    {"q": "1️⃣1️⃣ 선물용 과자: 🥗 건강 기능성 vs 🐻 귀여운 패키지", "opts": {"🥗 건강": "T", "🐻 귀여운": "F"}},
    {"q": "1️⃣2️⃣ 음식 사진: 📷 실용적 구도 vs 🎨 아트적인 연출", "opts": {"📷 실용적": "T", "🎨 아트적": "F"}},
    # J/P (4문항)
    {"q": "1️⃣3️⃣ 식사 계획: 🗓️ 주간 메뉴 미리 계획 vs 🤷 당일 기분대로 결정", "opts": {"🗓️ 주간 계획": "J", "🤷 즉흥 결정": "P"}},
    {"q": "1️⃣4️⃣ 뷔페 이용: ⏰ 계획적으로 먹기 vs 🌀 자유롭게 이동하며 먹기", "opts": {"⏰ 계획적": "J", "🌀 자유롭게": "P"}},
    {"q": "1️⃣5️⃣ 남은 음식: 📦 포장해서 보관 vs 🗑️ 다음에 해결", "opts": {"📦 포장": "J", "🗑️ 나중에": "P"}},
    {"q": "1️⃣6️⃣ 신메뉴 출시: ✅ 사전 예약해서 먹기 vs 🔍 후기 보고 가기", "opts": {"✅ 예약": "J", "🔍 후기": "P"}},
]

# 사용자 응답 저장
responses = {}
for idx, q in enumerate(questions):
    responses[f"q{idx}"] = st.radio(q["q"], list(q["opts"].keys()))

# 결과 계산 버튼
if st.button("🍴 결과 보기"):
    # 점수 집계
    scores = {"E": 0, "I": 0, "S": 0, "N": 0, "T": 0, "F": 0, "J": 0, "P": 0}
    for idx, q in enumerate(questions):
        choice = responses[f"q{idx}"]
        letter = q["opts"][choice]
        scores[letter] += 1

    # MBTI 조합 생성
    mbti = ""
    mbti += "E" if scores["E"] > scores["I"] else "I"
    mbti += "S" if scores["S"] > scores["N"] else "N"
    mbti += "T" if scores["T"] > scores["F"] else "F"
    mbti += "J" if scores["J"] > scores["P"] else "P"

    # 결과 출력
    st.subheader(f"🎉 당신의 음식 MBTI는: {mbti} 🎉")
    st.write("테스트에 참여해주셔서 감사합니다! 🍽️")
