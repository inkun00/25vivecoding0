import streamlit as st

# 페이지 설정
st.set_page_config(
    page_title="MBTI 동물 테스트 🐾",
    page_icon="🦄",
    layout="centered",
)

# CSS 스타일 (간단)
st.markdown("""
<style>
.stApp {
    max-width: 600px;
    margin: auto;
    padding: 1rem;
}
.radio-label {
    font-size: 1rem !important;
}
</style>
""", unsafe_allow_html=True)

# 헤더
st.title("🎉 MBTI 동물 시나리오 테스트 🎉")
st.write("각 상황에서 나와 가장 가까운 동물을 고르고, 당신의 MBTI 유형을 알아보세요! 🐾")

# 질문 정의
questions = [
    {"q": "1️⃣ 새로운 놀이를 할 때",
     "opts": {"🐝 친구들과 우르르 몰려다니는 꿀벌처럼 활동한다": "E",
              "🐢 혼자 천천히 방법을 생각하며 노는 거북이처럼 차분히 행동한다": "I"}},
    {"q": "2️⃣ 친구들과 이야기할 때",
     "opts": {"🦜 앵무새처럼 목소리를 크게 내며 수다를 떤다": "E",
              "🦉 부엉이처럼 조용히 귀 기울여 듣는다": "I"}},
    {"q": "3️⃣ 교실에서 질문이 생기면",
     "opts": {"🐿️ 바로 손을 들고 질문하는 다람쥐 같다": "E",
              "🦊 혼자 교과서를 보며 스스로 알아보는 여우 같다": "I"}},
    {"q": "4️⃣ 쉬는 시간에",
     "opts": {"🐕‍🦺 운동장에서 뛰어노는 강아지 같다": "E",
              "🐈 운동장 구석에서 책 읽는 고양이 같다": "I"}},
    {"q": "5️⃣ 문제를 풀 때",
     "opts": {"🦁 눈에 보이는 그대로 빠르게 해결하는 사자 같다": "S",
              "🐬 숨은 의미나 규칙을 찾으려고 머리를 쓰는 돌고래 같다": "N"}},
    {"q": "6️⃣ 이야기를 들을 때",
     "opts": {"🐘 사실만 콕콕 집어서 듣는 코끼리 같다": "S",
              "🦊 이야기 아래에 숨은 느낌이나 생각을 상상하는 여우 같다": "N"}},
    {"q": "7️⃣ 친구가 울고 있으면",
     "opts": {"🦉 “왜 우는데?” 하고 이유를 묻는 올빼미 같다": "T",
              "🐶 말없이 다가가 같이 앉아주는 강아지 같다": "F"}},
    {"q": "8️⃣ 새로운 계획을 세울 때",
     "opts": {"🦫 일정을 딱딱 정해두고 지키는 비버 같다": "J",
              "🦘 그때그때 기분 따라 유연하게 행동하는 캥거루 같다": "P"}},
    {"q": "9️⃣ 모험을 떠날 때",
     "opts": {"🐢 미리 지도와 준비물을 꼼꼼히 챙기는 거북이 같다": "J",
              "🦁 준비물 없이 길을 떠나며 즐기는 사자 같다": "P"}},
    {"q": "🔟 숙제를 할 때",
     "opts": {"🦉 정해진 순서대로 하나씩 끝내는 부엉이 같다": "J",
              "🐿️ 하고 싶은 것부터 먼저 해보는 다람쥐 같다": "P"}},
    {"q": "1️⃣1️⃣ 그림을 그릴 때",
     "opts": {"🦓 눈에 보이는 색을 그대로 표현하는 얼룩말 같다": "S",
              "🦄 마음속 풍경을 상상해 그리는 유니콘 같다": "N"}},
    {"q": "1️⃣2️⃣ 실수하면",
     "opts": {"🐘 “왜 실수했지?” 하고 원인을 찾는 코끼리 같다": "T",
              "🐬 “다음엔 더 잘하면 돼!” 하고 기분 전환하는 돌고래 같다": "F"}},
    {"q": "1️⃣3️⃣ 친구들과 놀 때",
     "opts": {"🦁 규칙을 정하고 지키는 사자 같다": "J",
              "🦘 규칙 없이 자유롭게 노는 캥거루 같다": "P"}},
    {"q": "1️⃣4️⃣ 발표를 할 때",
     "opts": {"🦉 대본을 외워 틀리지 않으려 애쓰는 부엉이 같다": "J",
              "🦜 중요한 포인트만 생각하며 자연스럽게 얘기하는 앵무새 같다": "P"}},
    {"q": "1️⃣5️⃣ 새로운 게임을 배울 때",
     "opts": {"🐢 설명을 차근차근 읽어보는 거북이 같다": "S",
              "🐕 바로 해보면서 배우는 강아지 같다": "N"}},
    {"q": "1️⃣6️⃣ 친구와 약속을 잡을 때",
     "opts": {"🦫 날짜와 시간을 확실히 정하는 비버 같다": "J",
              "🦘 언제든 편할 때 만나자는 캥거루 같다": "P"}},
]

# 사용자 응답
responses = {}
for idx, q in enumerate(questions):
    responses[f"q{idx}"] = st.radio(q["q"], list(q["opts"].keys()), key=f"q{idx}")

# 결과 계산
if st.button("🦄 결과 보기"):
    scores = {"E":0,"I":0,"S":0,"N":0,"T":0,"F":0,"J":0,"P":0}
    for idx, q in enumerate(questions):
        choice = responses[f"q{idx}"]
        letter = q["opts"][choice]
        scores[letter] += 1
    mbti = (
        ("E" if scores["E"] >= scores["I"] else "I") +
        ("S" if scores["S"] >= scores["N"] else "N") +
        ("T" if scores["T"] >= scores["F"] else "F") +
        ("J" if scores["J"] >= scores["P"] else "P")
    )
    st.subheader(f"🎉 당신의 MBTI는: {mbti} 🎉")
    st.write("테스트에 참여해주셔서 감사합니다! 🐾")
